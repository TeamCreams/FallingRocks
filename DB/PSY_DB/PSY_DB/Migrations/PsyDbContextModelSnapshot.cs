// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSY_DB;

#nullable disable

namespace PSY_DB.Migrations
{
    [DbContext(typeof(PsyDbContext))]
    partial class PsyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PSY_DB.Tables.TblCashProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int")
                        .HasComment("0 : KRW, 1 : USD");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("tinyint(1)")
                        .HasComment("구독 중인지");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasComment("0 : Cash, 1 : Subscription");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("Store Product Id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP()");

                    b.HasKey("Id");

                    b.ToTable("TblCashProduct", t =>
                        {
                            t.HasComment("Cash Product 정보 Update 금지.");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("20001")
                        .HasComment("캐릭터 아이디");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Energy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("10");

                    b.Property<int>("Evolution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("140003")
                        .HasComment("업데이트 스택");

                    b.Property<int>("EvolutionSetLevel")
                        .HasColumnType("int")
                        .HasComment("EvolutionSet Level");

                    b.Property<string>("EyebrowStyle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("AnnoyedEyebrows");

                    b.Property<string>("EyesStyle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("Annoyed");

                    b.Property<DateTime>("FirstPurchaseEnergyTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("하루 중 에너지를 처음으로 구매한 시간");

                    b.Property<int>("Gold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("GoogleAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("0000")
                        .HasComment("구글 계정");

                    b.Property<string>("HairStyle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("Afro")
                        .HasComment("디자인");

                    b.Property<DateTime>("LastRewardClaimTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("접속 보상 시간");

                    b.Property<DateTime>("LatelyEnergy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP()")
                        .HasComment("마지막으로 에너지를 얻은 시간");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("Empty")
                        .HasComment("계정 닉네임");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("0000")
                        .HasComment("계정 비밀번호");

                    b.Property<int>("PurchaseEnergyCountToday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0")
                        .HasComment("에너지를 구매한 횟수");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("NewAccount")
                        .HasComment("계정 이름");

                    b.HasKey("Id");

                    b.ToTable("TblUserAccount", t =>
                        {
                            t.HasComment("User 계정 정보");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserCashProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasComment("TblCashProduct PK");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP()");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("UTC_TIMESTAMP()");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int")
                        .HasComment("User Account Id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TblUserCashProduct", t =>
                        {
                            t.HasComment("User Cash Product 정보");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("MessageSentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReceiverUserId")
                        .HasColumnType("int")
                        .HasComment("귓속말 시 사용할 메세지 수신 유저 아이디");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int")
                        .HasComment("TblUserAccount FK");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TblUserMessage", t =>
                        {
                            t.HasComment("Message 정보");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserMission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MissionId")
                        .HasColumnType("int");

                    b.Property<int>("MissionStatus")
                        .HasColumnType("int");

                    b.Property<int>("Param1")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int")
                        .HasComment("TblUserAccount FK");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TblUserMission", t =>
                        {
                            t.HasComment("UserScore 정보");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccumulatedStone")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("PlayTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Scoreboard")
                        .HasColumnType("int");

                    b.Property<int>("StageLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int")
                        .HasComment("TblUserScore FK");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TblUserScore", t =>
                        {
                            t.HasComment("UserScore 정보");
                        });
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserCashProduct", b =>
                {
                    b.HasOne("PSY_DB.Tables.TblCashProduct", "TblCashProductKeyNavigation")
                        .WithMany("TblUserCashProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSY_DB.Tables.TblUserAccount", "TblUserAccountKeyNavigation")
                        .WithMany("TblUserCashProduct")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblCashProductKeyNavigation");

                    b.Navigation("TblUserAccountKeyNavigation");
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserMessage", b =>
                {
                    b.HasOne("PSY_DB.Tables.TblUserAccount", "TblUserAccountKeyNavigation")
                        .WithMany("TblUserMessage")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUserAccountKeyNavigation");
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserMission", b =>
                {
                    b.HasOne("PSY_DB.Tables.TblUserAccount", "TblUserAccountKeyNavigation")
                        .WithMany("TblUserMissions")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUserAccountKeyNavigation");
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserScore", b =>
                {
                    b.HasOne("PSY_DB.Tables.TblUserAccount", "TblUserAccountKeyNavigation")
                        .WithMany("TblUserScores")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUserAccountKeyNavigation");
                });

            modelBuilder.Entity("PSY_DB.Tables.TblCashProduct", b =>
                {
                    b.Navigation("TblUserCashProducts");
                });

            modelBuilder.Entity("PSY_DB.Tables.TblUserAccount", b =>
                {
                    b.Navigation("TblUserCashProduct");

                    b.Navigation("TblUserMessage");

                    b.Navigation("TblUserMissions");

                    b.Navigation("TblUserScores");
                });
#pragma warning restore 612, 618
        }
    }
}
